basePath: /
definitions:
  models.CreateProductPayload:
    description: CreateProductPayload defines the structure for creating a new product
    properties:
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  models.CreateProductResponse:
    description: CreateProductResponse defines the structure for the response when
      creating a new product
    properties:
      id:
        type: integer
    type: object
  models.Product:
    description: Product defines the structure for a product
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  models.UpdateProductPayload:
    description: UpdateProductPayload defines the structure for updating an existing
      product
    properties:
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  utils.ErrorResponse:
    description: ErrorResponse defines the standard format for error responses.
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a Product API.
  title: Product API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Retrieve a list of products with pagination
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get a list of products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the input payload
      parameters:
      - description: Product Payload
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Delete a product by ID
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Retrieve a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Payload
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProductPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Update a product by ID
      tags:
      - products
swagger: "2.0"
